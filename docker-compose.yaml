version: "3.9"

services:
  redis:
    image: redis
    restart: always
    networks:
      - db_net

  webapp:
    restart: always
    container_name: webapp
    build: ./
    volumes:
      - ./:/app
      - ./static:/app/static
      - ./media:/app/media
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    command: bash entrypoint.sh
#    command: >
#      sh -c "python manage.py makemigrations &&
#      python manage.py migrate
#      && gunicorn easyoffer.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - db
    networks:
      - db_net

  worker:
    restart: always
    build: .
    volumes:
      - ./:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - webapp
      - db
    command: 'celery -A easyoffer worker -l info'
    networks:
      - db_net

  beat:
    restart: always
    build: .
    volumes:
      - ./:/app
    depends_on:
      - redis
      - webapp
      - worker
      - db
    command: 'celery -A easyoffer beat -l info'
    networks:
      - db_net

  db:
    image: postgres:15
    container_name: postgre
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - 5432:5432
    networks:
      - db_net

  nginx:
    build: ./nginx
    container_name: easyoffer_nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./static:/static
      - ./media:/media
      - ./uploads:/uploads
      - ./nginx/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - webapp
    networks:
      - db_net

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  postgres_data:

networks:
  db_net:
